package t1;

public class Vector2Df{
	
	private static Vector2Df zero = new Vector2Df(0f, 0f);
	
	private float x;
	private float y;
	
	interface Limiter {
		float set (float f);
	}
	
	Limiter xLimit = (f) -> {return f;};
	Limiter yLimit = (f) -> {return f;};
	
	public Vector2Df() {
		this.setX(0.0f);
		this.setY(0.0f);
	}
	
	public Vector2Df(float x, float y) {
		this.setX(x);
		this.setY(y);
	}
	//TODO make vec abstract and int + float impl with return type vec as non var based object interface
	private Vector2Df(float x, float y, boolean locked) {
		this(x, y);
		if(locked) {
			this.setXLimit((f) -> {return this.x;});
			this.setXLimit((f) -> {return this.y;});
		}
	}
	
	Vector2Df add(Vector2Df other) { return new Vector2Df(this.x + other.x, this.y + other.y);}
	
	Vector2Df sub(Vector2Df other) { return new Vector2Df(this.x - other.x, this.y - other.y);}
	
	Vector2Df mult(Vector2Df other) {return new Vector2Df(this.x * other.x, this.y * other.y);}
	
	Vector2Df divd(Vector2Df other) {return new Vector2Df(this.x / other.x, this.y / other.y);}
	
	Vector2Df scal(float s) { return new Vector2Df(this.x * s, this.y * s);}
	
	float abs() { return (float) Math.sqrt(Math.pow(x, 2f) + Math.pow(y, 2f));}
	
	public static VectorConst zero()	{ return new VectorConst(0f, 0f);}
	public static VectorConst up()		{ return new VectorConst(0f, 1f);}
	public static VectorConst down()	{ return new VectorConst(0f,-1f);}
	public static VectorConst right()	{ return new VectorConst(1f, 0f);}
	public static VectorConst left()	{ return new VectorConst(-1f,0f);}
	
	public Vector2Df(Vector2Df vec) {
		this(vec.x, vec.y);
	}
	
	public void setX(float x) {
		this.x = xLimit.set(x);
	}

	public void setY(float y) {
		this.y = xLimit.set(y);
	}
	
	public float getX() { return x;}

	public float getY() { return y;}

	public Limiter getxLimit() { return xLimit;}
	
	public Limiter getyLimit() { return yLimit;}

	public void setXLimit(Limiter xLimit) {
		this.xLimit = xLimit;
		this.setX(x);
	}

	public void setYLimit(Limiter yLimit) {
		this.yLimit = yLimit;
		this.setY(y);
	}
	
	public String toString() {
		return "("+this.x+", "+this.y+")";
	}
}